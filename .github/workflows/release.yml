name: Release new version

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          architecture: x64
          python-version: '3.10'
          cache: 'poetry'
      - name: Build packages
        run: |
          poetry install
          poetry build
      - name: Build man
        run: |
          poetry run make -C doc man
          zip -j -r dist/manuals.zip doc/_build/man/
      - uses: actions/upload-artifact@v3
        with:
          name: releases
          path: dist/
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: releases
          path: dist/
      - id: target_files
        run: |
          echo ::set-output name=man_1::manuals.zip
          echo ::set-output name=targz::$(basename $(ls dist/*tar.gz))
          echo ::set-output name=wheel::$(basename $(ls dist/*whl))
      - name: Create release on GitHub
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ''
          draft: false
          prerelease: false
      - name: Upload sdist to GitHub
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ steps.target_files.outputs.targz }}
          asset_name: ${{ steps.target_files.outputs.targz }}
          asset_content_type: application/gzip
      - name: Upload wheel to GitHub
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ steps.target_files.outputs.wheel }}
          asset_name: ${{ steps.target_files.outputs.wheel }}
          asset_content_type: application/zip
      - name: Upload man to GitHub
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ steps.target_files.outputs.man_1 }}
          asset_name: ${{ steps.target_files.outputs.man_1 }}
          asset_content_type: application/zip
